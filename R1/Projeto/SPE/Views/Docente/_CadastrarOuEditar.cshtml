@model SPE.ViewModel.DocenteViewModel

@* This partial view defines form fields that will appear when creating and editing entities *@

<link href="@Url.Content("~/Content/DragComponente.css")" rel="stylesheet" />

@section head{

    <script type="text/javascript">
        $(document).ready(function () {
            addAreaAtuacaoComponente();
            removeAreaAtuacaoComponente();
        });
        function addAreaAtuacaoComponente() {

            $(".addAreaAtuacaoComponente").click(function () {
                //alert();
                //var item = '';
                //var idAreaAtuacao = '#' + $(this).attr("id");
                //if ($('#tableAreaAtuacaoComponenteEscolhidos tbody').find(idAreaAtuacao).length) {
                //    IncluirModal("O Docente já possui esta Área de Atuação");
                //}
                //else {
                //    $('#tableAreaAtuacaoComponenteEscolhidos tbody').append($(this).parent().parent().clone()).find("icon:last").attr({
                //        class: "icon-remove-componente"
                //    });
                //    removeAreaAtuacao();
                //}
                //ListarComponente();
            });

        }

        function removeAreaAtuacaoComponente() {
            $(".icon-remove-componente").click(function () {
                $(this).parent().parent().remove();
            });
        }
    </script>
}
<div class="row-fluid">

    <div class="span6">
        @*<div class="editor-label">
            @Html.LabelFor(model => model.IdAgendaComponente)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.IdAgendaComponente, ((IEnumerable<SPE.Models.AgendaComponenteViewModel>)Model.AgendaComponente).Select(option => new SelectListItem
               {
                   Text = option.IdAgendaComponente.ToString(),
                   Value = option.IdAgendaComponente.ToString(),
                   Selected = Model != null && option.IdAgendaComponente == Model.IdAgendaComponente
               }), "Selecione", new { @disabled = "disabled" })
            @Html.ValidationMessageFor(model => model.IdAgendaComponente)
        </div>*@

        <div class="editor-label">
            @Html.LabelFor(model => model.IdTipoContrato)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.IdTipoContrato, ((IEnumerable<SPE.ViewModel.TipoContratoViewModel>)Model.TipoContrato).Select(option => new SelectListItem
       {
           Text = option.Descr,
           Value = option.IdTipoContrato.ToString(),
           Selected = Model != null && option.IdTipoContrato == Model.IdTipoContrato
       }), "Selecione"
                    //, new { @disabled = "disabled" }
       )
            @Html.ValidationMessageFor(model => model.IdTipoContrato)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.IdEmpresa)
        </div>

        <div class="editor-field">
            @Html.DropDownListFor(model => model.IdEmpresa, ((IEnumerable<SPE.ViewModel.EmpresaViewModel>)Model.Empresa).Select(option => new SelectListItem
       {
           Text = option.NomeFantasia,
           Value = option.IdEmpresa.ToString(),
           Selected = Model != null && option.IdEmpresa == Model.IdEmpresa
       }), "Selecione"
                    // , new { @disabled = "disabled" }
       )
            @Html.ValidationMessageFor(model => model.IdEmpresa)
        </div>


        <div class="editor-label">
            @Html.LabelFor(model => model.Nome)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Nome)
            @Html.ValidationMessageFor(model => model.Nome)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.CPF)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.CPF)
            @Html.ValidationMessageFor(model => model.CPF)
        </div>
    </div>
    <div class="span6">
        <div class="editor-label">
            @Html.LabelFor(model => model.Email)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Email)
            @Html.ValidationMessageFor(model => model.Email)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Sexo)
        </div>
        <div class="editor-field">
            <select name="Sexo" id="Sexo">
                <option value="-1">Selecione</option>
                <option value="1" @(Model.Sexo == 1 ? "selected=selected" : null)>Masculino</option>
                <option value="0" @(Model.Sexo == 0 ? "selected=selected" : null)>Feminino</option>
            </select>
            @Html.ValidationMessageFor(model => model.Sexo)
        </div>
        <div class="editor-label">
            Telefone
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Tel, new { maxlength = 32, @class = "input-medium",@tipo="telefone" })
         
            @Html.ValidationMessageFor(model => model.Tel)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.NivelFuncao)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.NivelFuncao)
            @Html.ValidationMessageFor(model => model.NivelFuncao)
        </div>

        @*         <div class="editor-label">
            <label>Upload foto </label>
        </div>
        <div class="editor-field">
            <input name="uploadFoto" type="file">
        </div>*@
    </div>

    @*<div class="editor-label">
            @Html.LabelFor(model => model.idAreaAtuacao)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.idAreaAtuacao, ((IEnumerable<SPE.ViewModel.AreaAtuacaoViewModel>) Model.listaAreaAtuacao).Select(option => new SelectListItem
       {
           Text = option.Nome,
           Value = option.IdAreaAtuacao.ToString(),
           Selected = Model.idAreaAtuacao != null && option.IdAreaAtuacao == Model.idAreaAtuacao
       }), "Selecione")
            @Html.ValidationMessageFor(model => model.idAreaAtuacao)
    </div>*@


</div>

<div class="row-fluid">
    @* Inicio Parte de Área de Atuação *@
    <div class="span6">
        <h4>Áreas de Atuação</h4>
        <div id="modulos">
            <table id="tableAreaAtuacao" class="table table-bordered">
                <thead>
                    <tr>
                        <th></th>
                        <th>Nome</th>


                    </tr>
                </thead>
                <tbody>

                    @foreach (var item in Model.listaAreaAtuacao)
                    {
                                         
                        <tr>
                            <td style="width: 8%;">
                                <span id="@item.IdAreaAtuacao" class="icon icon-plus-sign addAreaAtuacao"></span>
                            </td>
                            <td>@item.Nome</td>
                        </tr>
                                     
                    }



                </tbody>
            </table>

        </div>
    </div>

    <div class="span6">
        <h4>Áreas de Atuação Escolhidas </h4>
        <div id="modulos">
            <table id="tableAreaAtuacaoEscolhidos" class="table table-bordered">
                <thead>
                    <tr>
                        <th></th>
                        <th>Nome</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.AreaAtuacao != null)
                    {
                        foreach (var AreaAtuacao in Model.AreaAtuacao)
                        {
                        <tr>
                            <td style="width: 8%;">
                                <span id="@AreaAtuacao.IdAreaAtuacao" class="icon icon-remove" onclick="removeAreaAtuacao(this)"></span>
                            </td>
                            <td>@AreaAtuacao.Nome</td>
                        </tr>

                        }
                    }


                </tbody>
            </table>
        </div>
    </div>
</div>

<div class="row-fluid">
    <div id="modulos" class="span6">
        <h1>Competências</h1>
        <div class="modulo-item" order="1" moduloid="">
            <div id="headModulo">
                @*  Nome  : *@
                @*<input type="text" class="modelTitle" id="nomeModulo" value="Compotência" />*@
                <div style="float: right; font-weight: bold;">
                    @*  (<span id="cargaTotal">0</span> h)*@


                </div>
                <a href="#" class="removeModulo">Limpar
                        @*<icon class="icon-remove"></icon>*@
                </a>
                <a href="#" class="toggle">
                    @*  <icon class="icon-minus"></icon>*@
                </a>

            </div>
            <div style="clear: right"></div>

            @if (Model.Componente != null && Model.Componente.Count > 0)
            {
                <ul class="ul1 modulos" style="margin-right: 10px;">
                    @foreach (var item in Model.Componente)
                    {
                        <li componentid="@item.IdComponente" carga="@item.CH" nome="@item.Nome" class="ui-draggable" style="position: relative; cursor:pointer; cursor:hand -webkit-touch-callout: none;
                            -webkit-user-select: none;
                            -khtml-user-select: none;
                            -moz-user-select: moz-none;
                            -ms-user-select: none;
                            user-select: none;">@item.Nome <a href="" onclick="return false;" class="remove" style="margin-left: 4px;">
                                <span class="icon icon-remove"></span>
                            </a><span style="font-weight: bold; float: right"></span></li>
                    }
                </ul>

            }
            else
            {

                <ul class="ul1 modulos">
                </ul>
            }

        </div>
    </div>

    <div class="componentes span6">
        <h1>Componentes</h1>
        <p style="font-size: 12px">Os componentes são carregados de acordo com as áreas de atuação selecionadas.</p>
        <input type="text" id="txtBusca" name="txtBusca" value="" />
        <input type="button" class="btn" value="Busca" onclick="BuscaComponentes();" />

        <input type="button" class="btn addComponenteMatriz" value="Adicionar Componente" />

        <div id="componentesDocente">
            <ul class="ul1"></ul>
        </div>
    </div>
</div>


<input type="hidden" name="idComponentes" id="idComponentes" />
<input type="hidden" name="idsAreaAtuacao" id="idsAreaAtuacao" />

<div id="ModalComponente" class="modal hide fade"></div>




